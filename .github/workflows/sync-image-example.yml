# 工作流名称
name: Sync-Multiple-Images-to-DockerHub-Example
# 工作流运行时显示名称
run-name: ${{ github.actor }} is Sync Multiple Images to DockerHub.
# 怎样触发工作流
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # 允许手动触发工作流
  workflow_dispatch:

# 工作流程任务
jobs:
  syncimages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repos
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.9.1

      - name: Login to Docker Hub
        uses: docker/login-action@v2.2.0
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          logout: false

      - name: Use Skopeo Tools Sync Images to Docker Hub
        run: |
          #!/usr/bin/env bash
          # 定义镜像列表
          IMAGES=(
            "docker.io/langgenius/dify-sandbox:0.2.10"
            "docker.io/langgenius/dify-plugin-daemon:0.0.6-local"
            "docker.io/ubuntu/squid:latest"
            "docker.io/certbot/certbot:latest"
            "docker.io/nginx:latest"
            "docker.io/semitechnologies/weaviate:1.19.0"
            "docker.io/langgenius/qdrant:v1.7.3"
            "docker.io/pgvector/pgvector:pg16"
            "docker.io/tensorchord/pgvecto-rs:pg16-v0.3.0"
            "ghcr.io/chroma-core/chroma:0.5.20"
            "quay.io/oceanbase/oceanbase-ce:4.3.3.0-100000142024101215"
            "container-registry.oracle.com/database/free:latest"
            "quay.io/coreos/etcd:v3.5.5"
            "container-registry.oracle.com/database/free:latest"
            "docker.io/minio/minio:RELEASE.2023-03-20T20-16-18Z"
            "docker.io/milvusdb/milvus:v2.5.0-beta"
            "docker.io/opensearchproject/opensearch:latest"
            "docker.io/opensearchproject/opensearch-dashboards:latest"
            "docker.io/opengauss/opengauss:7.0.0-RC1"
            "docker.io/myscale/myscaledb:1.6.4"
            "docker.elastic.co/elasticsearch/elasticsearch:8.14.3"
            "docker.elastic.co/kibana/kibana:8.14.3"
            "downloads.unstructured.io/unstructured-io/unstructured-api:latest"
          )
          
          # 循环处理镜像
          for IMAGE in "${IMAGES[@]}"; do
            # 提取镜像名称和版本
            IMAGE_NAME=$(echo $IMAGE | cut -d':' -f1)
            IMAGE_TAG=$(echo $IMAGE | cut -d':' -f2)
          
            # 目标镜像地址
            TARGET_IMAGE="registry.cn-hangzhou.aliyuncs.com/carbonease/${IMAGE_NAME##*/}:$IMAGE_TAG"
          
            # 使用 Skopeo 同步镜像
            echo "Syncing $IMAGE to $TARGET_IMAGE..."
            skopeo copy docker://$IMAGE docker://$TARGET_IMAGE
            echo "Sync completed for $IMAGE."
          done
